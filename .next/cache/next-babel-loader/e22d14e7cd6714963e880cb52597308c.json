{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\tquery($id: ID!) {\\n\\t\\t\\tproduct(id: $id) {\\n\\t\\t\\t\\tname\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\tdescription\\n\\t\\t\\t\\timage {\\n\\t\\t\\t\\t\\tcaption\\n\\t\\t\\t\\t\\tsrcSet\\n\\t\\t\\t\\t\\tsourceUrl\\n\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\turi\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t... on SimpleProduct {\\n\\t\\t\\t\\t\\tprice\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\tquery($id: ID!, $where: RootCategoriesTermArgs!) {\\n\\t\\t\\tproduct(first: $first, where: $where) {\\n\\t\\t\\t\\tname\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\tdescription\\n\\t\\t\\t\\timage {\\n\\t\\t\\t\\t\\tcaption\\n\\t\\t\\t\\t\\tsrcSet\\n\\t\\t\\t\\t\\tsourceUrl\\n\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\turi\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t... on SimpleProduct {\\n\\t\\t\\t\\t\\tprice\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @format */\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport client from \"../components/ApolloClient\";\nimport gql from \"graphql-tag\";\nvar Product = withRouter(_c = function _c(props) {\n  //console.warn(props);\n  var product = props.product;\n  return __jsx(Layout, null, product ? __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"card bg-light mb3 p-5\"\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, product.name), __jsx(\"div\", {\n    className: \"card-body\"\n  }, __jsx(\"h4\", {\n    className: \"card-title\"\n  }, product.name), __jsx(\"img\", {\n    src: product.image.sourceUrl,\n    alt: \"Product Image\",\n    width: \"200px\",\n    srcSet: product.image.srcSet\n  }), __jsx(\"p\", {\n    className: \"card-text\"\n  }, product.description)))) : \"\");\n});\n_c2 = Product;\n\nProduct.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var slug, id, PRODUCT_QUERY, PRODUCT_QUERY_SAV, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = context.query.slug;\n            id = slug ? slug.split(\"-\").pop() : context.query.id; //console.warn(id);\n\n            PRODUCT_QUERY = gql(_templateObject());\n            PRODUCT_QUERY_SAV = gql(_templateObject2());\n            _context.next = 6;\n            return client.query({\n              query: PRODUCT_QUERY,\n              variables: {\n                first: 1,\n                where: {\n                  id: id\n                }\n              }\n            });\n\n          case 6:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              product: result.data.product\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Product;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product$withRouter\");\n$RefreshReg$(_c2, \"Product\");","map":{"version":3,"sources":["/Users/didierflury/Documents/Realiser/pweb/woo-next/pages/product.js"],"names":["Layout","Link","withRouter","client","gql","Product","props","product","name","image","sourceUrl","srcSet","description","getInitialProps","context","slug","query","id","split","pop","PRODUCT_QUERY","PRODUCT_QUERY_SAV","variables","first","where","result","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,OAAO,GAAGH,UAAU,MAAC,YAACI,KAAD,EAAW;AACrC;AADqC,MAG7BC,OAH6B,GAGjBD,KAHiB,CAG7BC,OAH6B;AAKrC,SACC,MAAC,MAAD,QACEA,OAAO,GACP,mBACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BA,OAAO,CAACC,IAAtC,CADD,EAEC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAI,IAAA,SAAS,EAAC;AAAd,KAA4BD,OAAO,CAACC,IAApC,CADD,EAEC;AACC,IAAA,GAAG,EAAED,OAAO,CAACE,KAAR,CAAcC,SADpB;AAEC,IAAA,GAAG,EAAC,eAFL;AAGC,IAAA,KAAK,EAAC,OAHP;AAIC,IAAA,MAAM,EAAEH,OAAO,CAACE,KAAR,CAAcE;AAJvB,IAFD,EAQC;AAAG,IAAA,SAAS,EAAC;AAAb,KAA0BJ,OAAO,CAACK,WAAlC,CARD,CAFD,CADD,CADO,GAiBP,EAlBF,CADD;AAuBA,CA5ByB,CAA1B;MAAMP,O;;AA8BNA,OAAO,CAACQ,eAAR;AAAA,sEAA0B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,YAAAA,IAFe,GAGrBD,OAHqB,CAExBE,KAFwB,CAEfD,IAFe;AAKnBE,YAAAA,EALmB,GAKdF,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAH,GAA2BL,OAAO,CAACE,KAAR,CAAcC,EAL/B,EAOzB;;AAEMG,YAAAA,aATmB,GASHhB,GATG;AA6BnBiB,YAAAA,iBA7BmB,GA6BCjB,GA7BD;AAAA;AAAA,mBAiDJD,MAAM,CAACa,KAAP,CAAa;AACjCA,cAAAA,KAAK,EAAEI,aAD0B;AAEjCE,cAAAA,SAAS,EAAE;AACVC,gBAAAA,KAAK,EAAE,CADG;AAEVC,gBAAAA,KAAK,EAAE;AAAEP,kBAAAA,EAAE,EAAEA;AAAN;AAFG;AAFsB,aAAb,CAjDI;;AAAA;AAiDnBQ,YAAAA,MAjDmB;AAAA,6CAyDlB;AACNlB,cAAAA,OAAO,EAAEkB,MAAM,CAACC,IAAP,CAAYnB;AADf,aAzDkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AA8DA,eAAeF,OAAf","sourcesContent":["/** @format */\n\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport client from \"../components/ApolloClient\";\nimport gql from \"graphql-tag\";\n\nconst Product = withRouter((props) => {\n\t//console.warn(props);\n\n\tconst { product } = props;\n\n\treturn (\n\t\t<Layout>\n\t\t\t{product ? (\n\t\t\t\t<div>\n\t\t\t\t\t<div className='card bg-light mb3 p-5'>\n\t\t\t\t\t\t<div className='card-header'>{product.name}</div>\n\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t<h4 className='card-title'>{product.name}</h4>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={product.image.sourceUrl}\n\t\t\t\t\t\t\t\talt='Product Image'\n\t\t\t\t\t\t\t\twidth='200px'\n\t\t\t\t\t\t\t\tsrcSet={product.image.srcSet}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p className='card-text'>{product.description}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t\"\"\n\t\t\t)}\n\t\t</Layout>\n\t);\n});\n\nProduct.getInitialProps = async function (context) {\n\tlet {\n\t\tquery: { slug },\n\t} = context;\n\n\tconst id = slug ? slug.split(\"-\").pop() : context.query.id;\n\n\t//console.warn(id);\n\n\tconst PRODUCT_QUERY = gql`\n\t\tquery($id: ID!, $where: RootCategoriesTermArgs!) {\n\t\t\tproduct(first: $first, where: $where) {\n\t\t\t\tname\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t\timage {\n\t\t\t\t\tcaption\n\t\t\t\t\tsrcSet\n\t\t\t\t\tsourceUrl\n\t\t\t\t\ttitle\n\t\t\t\t\turi\n\t\t\t\t}\n\t\t\t\t... on SimpleProduct {\n\t\t\t\t\tprice\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n\n\tconst PRODUCT_QUERY_SAV = gql`\n\t\tquery($id: ID!) {\n\t\t\tproduct(id: $id) {\n\t\t\t\tname\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t\timage {\n\t\t\t\t\tcaption\n\t\t\t\t\tsrcSet\n\t\t\t\t\tsourceUrl\n\t\t\t\t\ttitle\n\t\t\t\t\turi\n\t\t\t\t}\n\t\t\t\t... on SimpleProduct {\n\t\t\t\t\tprice\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n\n\tconst result = await client.query({\n\t\tquery: PRODUCT_QUERY,\n\t\tvariables: {\n\t\t\tfirst: 1,\n\t\t\twhere: { id: id },\n\t\t},\n\t});\n\n\treturn {\n\t\tproduct: result.data.product,\n\t};\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}