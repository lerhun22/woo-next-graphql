{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\tquery MonProduit($id: ID!) {\\n\\t\\t\\tproduct(id: $id) {\\n\\t\\t\\t\\tname\\n\\t\\t\\t\\tid\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @format */\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport client from \"../components/ApolloClient\";\nimport gql from \"graphql-tag\";\nvar Product = withRouter(_c = function _c(props) {\n  console.warn(props);\n  var product = props.product;\n  return;\n\n  __jsx(Layout, null, product ? __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"card bg-light mb3 p-5\"\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, product.name))) : \"\");\n});\n_c2 = Product;\n\nProduct.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var slug, id, PRODUCT_QUERY, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = context.query.slug;\n            id = slug ? slug.split(\"-\").pop() : context.query.id;\n            console.warn(id);\n            PRODUCT_QUERY = gql(_templateObject());\n            _context.next = 6;\n            return client.query({\n              query: PRODUCT_QUERY,\n              variables: {\n                id: id\n              }\n            });\n\n          case 6:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              product: result.data.productBy\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Product;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product$withRouter\");\n$RefreshReg$(_c2, \"Product\");","map":{"version":3,"sources":["/Users/didierflury/Documents/Realiser/pweb/woo-next/pages/product.js"],"names":["Layout","Link","withRouter","client","gql","Product","props","console","warn","product","name","getInitialProps","context","slug","query","id","split","pop","PRODUCT_QUERY","variables","result","data","productBy"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,OAAO,GAAGH,UAAU,MAAC,YAACI,KAAD,EAAW;AACrCC,EAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AADqC,MAG7BG,OAH6B,GAGjBH,KAHiB,CAG7BG,OAH6B;AAKrC;;AACA,QAAC,MAAD,QACEA,OAAO,GACP,mBACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BA,OAAO,CAACC,IAAtC,CADD,CADD,CADO,GAOP,EARF;AAWA,CAjByB,CAA1B;MAAML,O;;AAmBNA,OAAO,CAACM,eAAR;AAAA,sEAA0B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,YAAAA,IAFe,GAGrBD,OAHqB,CAExBE,KAFwB,CAEfD,IAFe;AAKnBE,YAAAA,EALmB,GAKdF,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAH,GAA2BL,OAAO,CAACE,KAAR,CAAcC,EAL/B;AAOzBR,YAAAA,OAAO,CAACC,IAAR,CAAaO,EAAb;AAEMG,YAAAA,aATmB,GASHd,GATG;AAAA;AAAA,mBAkBJD,MAAM,CAACW,KAAP,CAAa;AACjCA,cAAAA,KAAK,EAAEI,aAD0B;AAEjCC,cAAAA,SAAS,EAAE;AAAEJ,gBAAAA,EAAE,EAAFA;AAAF;AAFsB,aAAb,CAlBI;;AAAA;AAkBnBK,YAAAA,MAlBmB;AAAA,6CAuBlB;AACNX,cAAAA,OAAO,EAAEW,MAAM,CAACC,IAAP,CAAYC;AADf,aAvBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AA4BA,eAAejB,OAAf","sourcesContent":["/** @format */\n\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport client from \"../components/ApolloClient\";\nimport gql from \"graphql-tag\";\n\nconst Product = withRouter((props) => {\n\tconsole.warn(props);\n\n\tconst { product } = props;\n\n\treturn;\n\t<Layout>\n\t\t{product ? (\n\t\t\t<div>\n\t\t\t\t<div className='card bg-light mb3 p-5'>\n\t\t\t\t\t<div className='card-header'>{product.name}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : (\n\t\t\t\"\"\n\t\t)}\n\t</Layout>;\n});\n\nProduct.getInitialProps = async function (context) {\n\tlet {\n\t\tquery: { slug },\n\t} = context;\n\n\tconst id = slug ? slug.split(\"-\").pop() : context.query.id;\n\n\tconsole.warn(id);\n\n\tconst PRODUCT_QUERY = gql`\n\t\tquery MonProduit($id: ID!) {\n\t\t\tproduct(id: $id) {\n\t\t\t\tname\n\t\t\t\tid\n\t\t\t}\n\t\t}\n\t`;\n\n\tconst result = await client.query({\n\t\tquery: PRODUCT_QUERY,\n\t\tvariables: { id },\n\t});\n\n\treturn {\n\t\tproduct: result.data.productBy,\n\t};\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}