{"ast":null,"code":"var __jsx = React.createElement;\n\n/** @format */\nimport React, { useState, useEffect } from \"react\"; //see what are hooks ? for function component - not for a component - so we don't have to manage didmount etc fonction with that\n\nexport var AppContext = React.createContext([{}, function () {}]);\nexport var AppProvider = function AppProvider(props) {\n  var _useState = useState(),\n      cart = _useState[0],\n      setCart = _useState[1];\n\n  useEffect(function () {\n    //test if data is render into the clien side not the server side\n    if (true) {\n      var cartData = localStorage.getItem(\"woo-next-cart\");\n      cartData = null !== cartData ? JSON.parse(cartData) : \"\";\n      setCart(cartData);\n    }\n  }, []);\n  return __jsx(AppContext.Provider, {\n    value: [cart, setCart]\n  }, props.children);\n};","map":null,"metadata":{},"sourceType":"module"}