{"ast":null,"code":"var __jsx = React.createElement;\n\n/** @format */\nimport React, { useState, useEffect } from \"react\"; //see what are hooks ? for function component - not for a component - so we don't have to manage didmount etc fonction with that\n\nexport const AppContext = React.createContext([{}, () => {}]);\nexport const AppProvider = props => {\n  const {\n    0: cart,\n    1: setCart\n  } = useState();\n  useEffect(() => {\n    //test if data is render into the clien side not the server side\n    if (false) {\n      let cartData = localStorage.getItem(\"woo-next-cart\");\n      cartData = null !== cartData ? JSON.parse(cartData) : \"\";\n      setCart(cartData);\n    }\n  }, []);\n  return __jsx(AppContext.Provider, {\n    value: [cart, setCart]\n  }, props.children);\n};","map":null,"metadata":{},"sourceType":"module"}