{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery Product($id: ID!) {\\n\\t\\tproduct(id: $id, idType: SLUG) {\\n\\t\\t\\tid\\n\\t\\t\\tproductId\\n\\t\\t\\taverageRating\\n\\t\\t\\tslug\\n\\t\\t\\tdescription\\n\\t\\t\\timage {\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\turi\\n\\t\\t\\t\\ttitle\\n\\t\\t\\t\\tsrcSet\\n\\t\\t\\t\\tsourceUrl\\n\\t\\t\\t}\\n\\t\\t\\tname\\n\\t\\t\\t... on SimpleProduct {\\n\\t\\t\\t\\tprice\\n\\t\\t\\t\\tid\\n\\t\\t\\t}\\n\\t\\t\\t... on VariableProduct {\\n\\t\\t\\t\\tprice\\n\\t\\t\\t\\tid\\n\\t\\t\\t}\\n\\t\\t\\t... on ExternalProduct {\\n\\t\\t\\t\\tprice\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\texternalUrl\\n\\t\\t\\t}\\n\\t\\t\\t... on GroupProduct {\\n\\t\\t\\t\\tproducts {\\n\\t\\t\\t\\t\\tnodes {\\n\\t\\t\\t\\t\\t\\t... on SimpleProduct {\\n\\t\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\t\\tprice\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tid\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @format */\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport client from \"../components/ApolloClient\";\nimport gql from \"graphql-tag\";\nvar Product = withRouter(function (props) {\n  console.warn(props);\n  return __jsx(\"div\", null, \"Product\");\n});\nvar PRODUCT_BY_SLUG_QUERY = gql(_templateObject());\n\nProduct.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var slug, id, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = context.query.slug;\n            id = slug ? slug : context.query.id;\n            _context.next = 4;\n            return client.query({\n              query: PRODUCT_BY_SLUG_QUERY,\n              variables: {\n                id: id\n              }\n            });\n\n          case 4:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                product: result.data.product\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}