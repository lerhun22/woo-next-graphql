{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { getUpdatedItems } from \"../../../functions\";\n\nconst CartItem = ({\n  item,\n  setCart,\n  handleRemoveProductClick\n}) => {\n  const {\n    0: productCount,\n    1: setProductCount\n  } = useState(item.qty);\n\n  const handleQtyChange = (event, cartKey) => {\n    if (false) {\n      // If the user tries to delete the count of product, set that to 1 by default ( This will not allow him to reduce it less than zero )\n      const newQty = event.target.value ? parseInt(event.target.value) : 1; // Set the new qty in state.\n\n      setProductCount(newQty);\n\n      if (products.length) {\n        const updatedItems = getUpdatedItems(products, newQty, cartKey);\n        updateCart({\n          variables: {\n            input: {\n              clientMutationId: v4(),\n              items: updatedItems\n            }\n          }\n        });\n      }\n    }\n  };\n\n  return __jsx(\"tr\", {\n    className: \"woo-next-cart-item\",\n    key: item.productId\n  }, __jsx(\"th\", {\n    className: \"woo-next-cart-element woo-next-cart-el-close\"\n  }, __jsx(\"span\", {\n    className: \"woo-next-cart-close-icon\",\n    onClick: event => handleRemoveProductClick(event, item.cartKey, products)\n  }, __jsx(\"i\", {\n    className: \"fa fa-times-circle\"\n  }))), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, __jsx(\"img\", {\n    width: \"64\",\n    src: item.image.sourceUrl,\n    srcSet: item.image.srcSet,\n    alt: item.image.title\n  })), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, item.name), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, 'string' !== typeof item.price ? item.price.toFixed(2) : item.price), __jsx(\"td\", {\n    className: \"woo-next-cart-element woo-next-cart-qty\"\n  }, __jsx(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    \"data-cart-key\": item.cartKey,\n    className: \"woo-next-cart-qty-input\",\n    value: productCount,\n    onChange: event => handleQtyChange(event, item.cartKey)\n  })), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, 'string' !== typeof item.totalPrice ? item.totalPrice.toFixed(2) : item.totalPrice));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["/Users/didierflury/Documents/Realiser/pweb/woo-next/components/cart/cart-page/CartItem.js"],"names":["useState","getUpdatedItems","CartItem","item","setCart","handleRemoveProductClick","productCount","setProductCount","qty","handleQtyChange","event","cartKey","newQty","target","value","parseInt","products","length","updatedItems","updateCart","variables","input","clientMutationId","v4","items","productId","image","sourceUrl","srcSet","title","name","price","toFixed","totalPrice"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAiD;AAEjE,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCP,QAAQ,CAACG,IAAI,CAACK,GAAN,CAAhD;;AAEA,QAAMC,eAAe,GAAG,CAAEC,KAAF,EAASC,OAAT,KAAsB;AAE7C,eAAuB;AAEtB;AACA,YAAMC,MAAM,GAAKF,KAAK,CAACG,MAAN,CAAaC,KAAf,GAAyBC,QAAQ,CAAEL,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAjC,GAA0D,CAAzE,CAHsB,CAKtB;;AACAP,MAAAA,eAAe,CAAEK,MAAF,CAAf;;AAEA,UAAKI,QAAQ,CAACC,MAAd,EAAuB;AAEtB,cAAMC,YAAY,GAAGjB,eAAe,CAAEe,QAAF,EAAYJ,MAAZ,EAAoBD,OAApB,CAApC;AAEAQ,QAAAA,UAAU,CAAE;AACXC,UAAAA,SAAS,EAAE;AACVC,YAAAA,KAAK,EAAE;AACNC,cAAAA,gBAAgB,EAAEC,EAAE,EADd;AAENC,cAAAA,KAAK,EAAEN;AAFD;AADG;AADA,SAAF,CAAV;AAQA;AAGD;AACD,GA1BD;;AA6BA,SAEC;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAmC,IAAA,GAAG,EAAGf,IAAI,CAACsB;AAA9C,KACC;AAAI,IAAA,SAAS,EAAC;AAAd,KAEC;AAAM,IAAA,SAAS,EAAC,0BAAhB;AACM,IAAA,OAAO,EAAKf,KAAF,IAAaL,wBAAwB,CAAEK,KAAF,EAASP,IAAI,CAACQ,OAAd,EAAuBK,QAAvB;AADrD,KAEC;AAAG,IAAA,SAAS,EAAC;AAAb,IAFD,CAFD,CADD,EAUC;AAAI,IAAA,SAAS,EAAC;AAAd,KACC;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,GAAG,EAAGb,IAAI,CAACuB,KAAL,CAAWC,SAAjC;AAA6C,IAAA,MAAM,EAAGxB,IAAI,CAACuB,KAAL,CAAWE,MAAjE;AAA0E,IAAA,GAAG,EAAGzB,IAAI,CAACuB,KAAL,CAAWG;AAA3F,IADD,CAVD,EAcC;AAAI,IAAA,SAAS,EAAC;AAAd,KAAuC1B,IAAI,CAAC2B,IAA5C,CAdD,EAiBC;AAAI,IAAA,SAAS,EAAC;AAAd,KAAwC,aAAa,OAAO3B,IAAI,CAAC4B,KAA1B,GAAmC5B,IAAI,CAAC4B,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CAAnC,GAA2D7B,IAAI,CAAC4B,KAAvG,CAjBD,EAoBC;AAAI,IAAA,SAAS,EAAC;AAAd,KAEC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,GAAG,EAAC,GAFL;AAGC,qBAAgB5B,IAAI,CAACQ,OAHtB;AAIC,IAAA,SAAS,EAAC,yBAJX;AAKC,IAAA,KAAK,EAAGL,YALT;AAMC,IAAA,QAAQ,EAAKI,KAAF,IAAaD,eAAe,CAAEC,KAAF,EAASP,IAAI,CAACQ,OAAd;AANxC,IAFD,CApBD,EAgCC;AAAI,IAAA,SAAS,EAAC;AAAd,KAA0C,aAAa,OAAOR,IAAI,CAAC8B,UAA3B,GAA0C9B,IAAI,CAAC8B,UAAL,CAAgBD,OAAhB,CAAyB,CAAzB,CAA1C,GAAyE7B,IAAI,CAAC8B,UAAtH,CAhCD,CAFD;AAuCA,CAxED;;AA0EA,eAAe/B,QAAf","sourcesContent":["import { useState } from 'react';\nimport { getUpdatedItems } from \"../../../functions\";\n\n\nconst CartItem = ({ item, setCart, handleRemoveProductClick }) => {\n\n\tconst [productCount, setProductCount] = useState(item.qty);\n\t\n\tconst handleQtyChange = ( event, cartKey ) => {\n\n\t\tif ( process.browser ) {\n\n\t\t\t// If the user tries to delete the count of product, set that to 1 by default ( This will not allow him to reduce it less than zero )\n\t\t\tconst newQty = ( event.target.value ) ? parseInt( event.target.value ) : 1;\n\n\t\t\t// Set the new qty in state.\n\t\t\tsetProductCount( newQty );\n\n\t\t\tif ( products.length ) {\n\n\t\t\t\tconst updatedItems = getUpdatedItems( products, newQty, cartKey );\n\n\t\t\t\tupdateCart( {\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\tclientMutationId: v4(),\n\t\t\t\t\t\t\titems: updatedItems\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\n\n\t\t}\n\t};\n\n\n\treturn (\n\n\t\t<tr className=\"woo-next-cart-item\" key={ item.productId }>\n\t\t\t<th className=\"woo-next-cart-element woo-next-cart-el-close\">\n\t\t\t\t{/* Remove item */}\n\t\t\t\t<span className=\"woo-next-cart-close-icon\"\n\t\t\t\t      onClick={ ( event ) => handleRemoveProductClick( event, item.cartKey, products ) }>\n\t\t\t\t\t<i className=\"fa fa-times-circle\"/>\n\t\t\t\t</span>\n\t\t\t</th>\n\n\t\t\t{/* Image */}\n\t\t\t<td className=\"woo-next-cart-element\">\n\t\t\t\t<img width=\"64\" src={ item.image.sourceUrl } srcSet={ item.image.srcSet } alt={ item.image.title }/>\n\t\t\t</td>\n\t\t\t{/* Nom */}\n\t\t\t<td className=\"woo-next-cart-element\">{item.name}</td>\n\t\t\t\n\t\t\t{/* Prix */}\n\t\t\t<td className=\"woo-next-cart-element\">{('string' !== typeof item.price) ? item.price.toFixed(2) : item.price}</td>\n\n\t\t\t{/* Qty Input */ }\n\t\t\t<td className=\"woo-next-cart-element woo-next-cart-qty\">\n\t\t\t\t{/* @TODO Need to update this with graphQL query */ }\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tdata-cart-key={ item.cartKey }\n\t\t\t\t\tclassName=\"woo-next-cart-qty-input\"\n\t\t\t\t\tvalue={ productCount }\n\t\t\t\t\tonChange={ ( event ) => handleQtyChange( event, item.cartKey ) }\n\t\t\t\t/>\n\t\t\t</td>\n\t\t\t\n\t\t\t<td className=\"woo-next-cart-element\">{ ( 'string' !== typeof item.totalPrice ) ? item.totalPrice.toFixed( 2 ) : item.totalPrice }</td>\n\n\t\t</tr>\n\n\t\t)\n};\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}