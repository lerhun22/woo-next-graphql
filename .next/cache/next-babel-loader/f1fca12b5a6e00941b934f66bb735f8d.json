{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { v4 } from \"uuid\";\nimport { getUpdatedItems } from \"../../../functions\";\n\nvar CartItem = function CartItem(_ref) {\n  _s();\n\n  var item = _ref.item,\n      products = _ref.products,\n      updateCartProcessing = _ref.updateCartProcessing,\n      handleRemoveProductClick = _ref.handleRemoveProductClick,\n      updateCart = _ref.updateCart;\n\n  var _useState = useState(item.qty),\n      productCount = _useState[0],\n      setProductCount = _useState[1];\n  /*\n   * When user changes the qty from product input update the cart in localStorage\n   * Also update the cart in global context\n   *\n   * @param {Object} event event\n   *\n   * @return {void}\n   */\n\n\n  var handleQtyChange = function handleQtyChange(event, cartKey) {\n    if (true) {\n      event.stopPropagation(); // If the previous update cart mutation request is still processing, then return.\n\n      if (updateCartProcessing) {\n        return;\n      } // If the user tries to delete the count of product, set that to 1 by default ( This will not allow him to reduce it less than zero )\n\n\n      var newQty = event.target.value ? parseInt(event.target.value) : 1; // Set the new qty in state.\n\n      setProductCount(newQty);\n\n      if (products.length) {\n        var updatedItems = getUpdatedItems(products, newQty, cartKey);\n        updateCart({\n          variables: {\n            input: {\n              clientMutationId: v4(),\n              items: updatedItems\n            }\n          }\n        });\n      }\n    }\n  };\n\n  return __jsx(\"tr\", {\n    className: \"woo-next-cart-item\",\n    key: item.productId\n  }, __jsx(\"th\", {\n    className: \"woo-next-cart-element woo-next-cart-el-close\"\n  }, __jsx(\"span\", {\n    className: \"woo-next-cart-close-icon\",\n    onClick: function onClick(event) {\n      return handleRemoveProductClick(event, item.cartKey, products);\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-times-circle\"\n  }))), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, __jsx(\"img\", {\n    width: \"64\",\n    src: item.image.sourceUrl,\n    srcSet: item.image.srcSet,\n    alt: item.image.title\n  })), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, item.name), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, 'string' !== typeof item.price ? item.price.toFixed(2) : item.price), __jsx(\"td\", {\n    className: \"woo-next-cart-element woo-next-cart-qty\"\n  }, __jsx(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    \"data-cart-key\": item.cartKey,\n    className: \"woo-next-cart-qty-input form-control \".concat(updateCartProcessing ? 'woo-next-cart-disabled' : '', \" \"),\n    value: productCount,\n    onChange: function onChange(event) {\n      return handleQtyChange(event, item.cartKey);\n    }\n  }), updateCartProcessing ? __jsx(\"img\", {\n    className: \"woo-next-cart-item-spinner\",\n    src: \"/cart-spinner.gif\",\n    alt: \"spinner\"\n  }) : ''), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, 'string' !== typeof item.totalPrice ? item.totalPrice.toFixed(2) : item.totalPrice));\n};\n\n_s(CartItem, \"s68A5+8Y8kSQUs+1ivE+4rOU9sE=\");\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["/Users/didierflury/Documents/Realiser/pweb/woo-next/components/cart/cart-page/CartItem.js"],"names":["useState","v4","getUpdatedItems","CartItem","item","products","updateCartProcessing","handleRemoveProductClick","updateCart","qty","productCount","setProductCount","handleQtyChange","event","cartKey","stopPropagation","newQty","target","value","parseInt","length","updatedItems","variables","input","clientMutationId","items","productId","image","sourceUrl","srcSet","title","name","price","toFixed","totalPrice"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { v4 } from \"uuid\";\nimport { getUpdatedItems } from \"../../../functions\";\n\nconst CartItem = ( {\n\t                   item,\n\t                   products,\n\t                   updateCartProcessing,\n\t                   handleRemoveProductClick,\n\t                   updateCart,\n                   } ) => {\n\n\tconst [productCount, setProductCount] = useState( item.qty );\n\n\t/*\n\t * When user changes the qty from product input update the cart in localStorage\n\t * Also update the cart in global context\n\t *\n\t * @param {Object} event event\n\t *\n\t * @return {void}\n\t */\n\tconst handleQtyChange = ( event, cartKey ) => {\n\n\t\tif ( process.browser ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\t// If the previous update cart mutation request is still processing, then return.\n\t\t\tif ( updateCartProcessing ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the user tries to delete the count of product, set that to 1 by default ( This will not allow him to reduce it less than zero )\n\t\t\tconst newQty = ( event.target.value ) ? parseInt( event.target.value ) : 1;\n\n\t\t\t// Set the new qty in state.\n\t\t\tsetProductCount( newQty );\n\n\t\t\tif ( products.length ) {\n\n\t\t\t\tconst updatedItems = getUpdatedItems( products, newQty, cartKey );\n\n\t\t\t\tupdateCart( {\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\tclientMutationId: v4(),\n\t\t\t\t\t\t\titems: updatedItems\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\n\t\t}\n\t};\n\n\n\treturn (\n\t\t<tr className=\"woo-next-cart-item\" key={ item.productId }>\n\t\t\t<th className=\"woo-next-cart-element woo-next-cart-el-close\">\n\t\t\t\t{/* Remove item */}\n\t\t\t\t<span className=\"woo-next-cart-close-icon\"\n\t\t\t\t      onClick={ ( event ) => handleRemoveProductClick( event, item.cartKey, products ) }>\n\t\t\t\t\t<i className=\"fa fa-times-circle\"/>\n\t\t\t\t</span>\n\t\t\t</th>\n\t\t\t<td className=\"woo-next-cart-element\">\n\t\t\t\t<img width=\"64\" src={ item.image.sourceUrl } srcSet={ item.image.srcSet } alt={ item.image.title }/>\n\t\t\t</td>\n\t\t\t<td className=\"woo-next-cart-element\">{ item.name }</td>\n\t\t\t<td className=\"woo-next-cart-element\">{ ( 'string' !== typeof item.price ) ? item.price.toFixed( 2 ) : item.price }</td>\n\n\t\t\t{/* Qty Input */ }\n\t\t\t<td className=\"woo-next-cart-element woo-next-cart-qty\">\n\t\t\t\t{/* @TODO Need to update this with graphQL query */ }\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tdata-cart-key={ item.cartKey }\n\t\t\t\t\tclassName={ `woo-next-cart-qty-input form-control ${ updateCartProcessing ? 'woo-next-cart-disabled' : '' } ` }\n\t\t\t\t\tvalue={ productCount }\n\t\t\t\t\tonChange={ ( event ) => handleQtyChange( event, item.cartKey ) }\n\t\t\t\t/>\n\t\t\t\t{ updateCartProcessing ?\n\t\t\t\t\t<img className=\"woo-next-cart-item-spinner\" src=\"/cart-spinner.gif\" alt=\"spinner\"/> : '' }\n\t\t\t</td>\n\t\t\t<td className=\"woo-next-cart-element\">{ ( 'string' !== typeof item.totalPrice ) ? item.totalPrice.toFixed( 2 ) : item.totalPrice }</td>\n\t\t</tr>\n\t)\n};\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}