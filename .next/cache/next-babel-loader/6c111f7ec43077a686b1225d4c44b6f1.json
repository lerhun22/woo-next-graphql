{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nvar CartItem = function CartItem(_ref) {\n  _s();\n\n  var item = _ref.item,\n      setCart = _ref.setCart,\n      handleRemoveProductClick = _ref.handleRemoveProductClick;\n\n  var _useState = useState(item.qty),\n      productCount = _useState[0],\n      setProductCount = _useState[1];\n\n  var handleQtyChange = function handleQtyChange(event, cartKey) {\n    if (true) {\n      // If the user tries to delete the count of product, set that to 1 by default ( This will not allow him to reduce it less than zero )\n      var newQty = event.target.value ? parseInt(event.target.value) : 1; // Set the new qty in state.\n\n      setProductCount(newQty);\n\n      if (products.length) {\n        var updatedItems = getUpdatedItems(products, newQty, cartKey);\n        updateCart({\n          variables: {\n            input: {\n              clientMutationId: v4(),\n              items: updatedItems\n            }\n          }\n        });\n      }\n    }\n  };\n\n  return __jsx(\"tr\", {\n    className: \"woo-next-cart-item\",\n    key: item.productId\n  }, __jsx(\"th\", {\n    className: \"woo-next-cart-element woo-next-cart-el-close\"\n  }, __jsx(\"span\", {\n    className: \"woo-next-cart-close-icon\",\n    onClick: function onClick(event) {\n      return handleRemoveProductClick(event, item.cartKey, products);\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-times-circle\"\n  }))), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, __jsx(\"img\", {\n    width: \"64\",\n    src: item.image.sourceUrl,\n    srcSet: item.image.srcSet,\n    alt: item.image.title\n  })), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, item.name), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, 'string' !== typeof item.price ? item.price.toFixed(2) : item.price), __jsx(\"td\", {\n    className: \"woo-next-cart-element woo-next-cart-qty\"\n  }, __jsx(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    \"data-cart-key\": item.cartKey,\n    className: \"woo-next-cart-qty-input form-control \".concat(updateCartProcessing ? 'woo-next-cart-disabled' : '', \" \"),\n    value: productCount,\n    onChange: function onChange(event) {\n      return handleQtyChange(event, item.cartKey);\n    }\n  }), updateCartProcessing ? __jsx(\"img\", {\n    className: \"woo-next-cart-item-spinner\",\n    src: \"/cart-spinner.gif\",\n    alt: \"spinner\"\n  }) : ''), __jsx(\"td\", {\n    className: \"woo-next-cart-element\"\n  }, 'string' !== typeof item.totalPrice ? item.totalPrice.toFixed(2) : item.totalPrice));\n};\n\n_s(CartItem, \"s68A5+8Y8kSQUs+1ivE+4rOU9sE=\");\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["/Users/didierflury/Documents/Realiser/pweb/woo-next/components/cart/cart-page/CartItem.js"],"names":["useState","CartItem","item","setCart","handleRemoveProductClick","qty","productCount","setProductCount","handleQtyChange","event","cartKey","newQty","target","value","parseInt","products","length","updatedItems","getUpdatedItems","updateCart","variables","input","clientMutationId","v4","items","productId","image","sourceUrl","srcSet","title","name","price","toFixed","updateCartProcessing","totalPrice"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nconst CartItem = ({ item, setCart, handleRemoveProductClick }) => {\n\n\tconst [productCount, setProductCount] = useState(item.qty);\n\t\n\tconst handleQtyChange = ( event, cartKey ) => {\n\n\t\tif ( process.browser ) {\n\n\t\t\t// If the user tries to delete the count of product, set that to 1 by default ( This will not allow him to reduce it less than zero )\n\t\t\tconst newQty = ( event.target.value ) ? parseInt( event.target.value ) : 1;\n\n\t\t\t// Set the new qty in state.\n\t\t\tsetProductCount( newQty );\n\n\t\t\tif ( products.length ) {\n\n\t\t\t\tconst updatedItems = getUpdatedItems( products, newQty, cartKey );\n\n\t\t\t\tupdateCart( {\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\tclientMutationId: v4(),\n\t\t\t\t\t\t\titems: updatedItems\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\n\t\t}\n\t};\n\n\n\treturn (\n\n\t\t<tr className=\"woo-next-cart-item\" key={ item.productId }>\n\t\t\t<th className=\"woo-next-cart-element woo-next-cart-el-close\">\n\t\t\t\t{/* Remove item */}\n\t\t\t\t<span className=\"woo-next-cart-close-icon\"\n\t\t\t\t      onClick={ ( event ) => handleRemoveProductClick( event, item.cartKey, products ) }>\n\t\t\t\t\t<i className=\"fa fa-times-circle\"/>\n\t\t\t\t</span>\n\t\t\t</th>\n\n\t\t\t{/* Image */}\n\t\t\t<td className=\"woo-next-cart-element\">\n\t\t\t\t<img width=\"64\" src={ item.image.sourceUrl } srcSet={ item.image.srcSet } alt={ item.image.title }/>\n\t\t\t</td>\n\t\t\t{/* Nom */}\n\t\t\t<td className=\"woo-next-cart-element\">{item.name}</td>\n\t\t\t\n\t\t\t{/* Prix */}\n\t\t\t<td className=\"woo-next-cart-element\">{('string' !== typeof item.price) ? item.price.toFixed(2) : item.price}</td>\n\n\t\t\t{/* Qty Input */ }\n\t\t\t<td className=\"woo-next-cart-element woo-next-cart-qty\">\n\t\t\t\t{/* @TODO Need to update this with graphQL query */ }\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tdata-cart-key={ item.cartKey }\n\t\t\t\t\tclassName={ `woo-next-cart-qty-input form-control ${ updateCartProcessing ? 'woo-next-cart-disabled' : '' } ` }\n\t\t\t\t\tvalue={ productCount }\n\t\t\t\t\tonChange={ ( event ) => handleQtyChange( event, item.cartKey ) }\n\t\t\t\t/>\n\t\t\t\t{ updateCartProcessing ?\n\t\t\t\t\t<img className=\"woo-next-cart-item-spinner\" src=\"/cart-spinner.gif\" alt=\"spinner\"/> : '' }\n\t\t\t</td>\n\t\t\t<td className=\"woo-next-cart-element\">{ ( 'string' !== typeof item.totalPrice ) ? item.totalPrice.toFixed( 2 ) : item.totalPrice }</td>\n\t\t</tr>\n\n\t\t)\n};\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}