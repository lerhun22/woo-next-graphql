{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t{\\n\\t\\tproducts(first: 20) {\\n\\t\\t\\tnodes {\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\t... on SimpleProduct {\\n\\t\\t\\t\\t\\tprice\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tproductId\\n\\t\\t\\t\\taverageRating\\n\\t\\t\\t\\tslug\\n\\t\\t\\t\\tdescription\\n\\t\\t\\t\\timage {\\n\\t\\t\\t\\t\\tcaption\\n\\t\\t\\t\\t\\tsrcSet\\n\\t\\t\\t\\t\\tsourceUrl\\n\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\turi\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tname\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @format */\nimport Layout from \"../components/Layout.js\";\nimport client from \"../components/ApolloClient\";\nimport Product from \"../components/Product\";\nimport gql from \"graphql-tag\";\nvar PRODUCTS_QUERY = gql(_templateObject());\n\nvar Index = function Index(props) {\n  console.warn(props);\n  var products = props.products;\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"product-container\"\n  }, products.length ? products.map(function (product) {\n    return __jsx(Product, {\n      key: product.id,\n      product: product\n    });\n  }) : \"\"));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var result;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.query({\n            query: PRODUCTS_QUERY\n          });\n\n        case 2:\n          result = _context.sent;\n          return _context.abrupt(\"return\", {\n            products: result.data.products.nodes\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/didierflury/Documents/Realiser/pweb/woo-next/pages/index.js"],"names":["Layout","client","Product","gql","PRODUCTS_QUERY","Index","props","console","warn","products","length","map","product","id","getInitialProps","query","result","data","nodes"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,cAAc,GAAGD,GAAH,mBAApB;;AAyBA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACxBC,EAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AADwB,MAGhBG,QAHgB,GAGHH,KAHG,CAGhBG,QAHgB;AAKxB,SACC,MAAC,MAAD,QACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACEA,QAAQ,CAACC,MAAT,GACED,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD;AAAA,WACb,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,MAAA,OAAO,EAAED;AAAnC,MADa;AAAA,GAAb,CADF,GAIE,EALJ,CADD,CADD;AAWA,CAhBD;;KAAMP,K;AAkBNA,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFb,MAAM,CAACc,KAAP,CAAa;AACjCA,YAAAA,KAAK,EAAEX;AAD0B,WAAb,CADE;;AAAA;AACjBY,UAAAA,MADiB;AAAA,2CAKhB;AACNP,YAAAA,QAAQ,EAAEO,MAAM,CAACC,IAAP,CAAYR,QAAZ,CAAqBS;AADzB,WALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AASA,eAAeb,KAAf","sourcesContent":["/** @format */\n\nimport Layout from \"../components/Layout.js\";\nimport client from \"../components/ApolloClient\";\nimport Product from \"../components/Product\";\nimport gql from \"graphql-tag\";\n\nconst PRODUCTS_QUERY = gql`\n\t{\n\t\tproducts(first: 20) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\t... on SimpleProduct {\n\t\t\t\t\tprice\n\t\t\t\t}\n\t\t\t\tproductId\n\t\t\t\taverageRating\n\t\t\t\tslug\n\t\t\t\tdescription\n\t\t\t\timage {\n\t\t\t\t\tcaption\n\t\t\t\t\tsrcSet\n\t\t\t\t\tsourceUrl\n\t\t\t\t\ttitle\n\t\t\t\t\turi\n\t\t\t\t}\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Index = (props) => {\n\tconsole.warn(props);\n\n\tconst { products } = props;\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='product-container'>\n\t\t\t\t{products.length\n\t\t\t\t\t? products.map((product) => (\n\t\t\t\t\t\t\t<Product key={product.id} product={product} />\n\t\t\t\t\t  ))\n\t\t\t\t\t: \"\"}\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nIndex.getInitialProps = async () => {\n\tconst result = await client.query({\n\t\tquery: PRODUCTS_QUERY,\n\t});\n\n\treturn {\n\t\tproducts: result.data.products.nodes,\n\t};\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}