{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/** @format */\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport client from \"../components/ApolloClient\";\nimport gql from \"graphql-tag\";\nconst Product = withRouter(props => {\n  //console.warn(props);\n  const {\n    product\n  } = props;\n  return __jsx(Layout, null, product ? __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"card bg-light mb3 p-5\"\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, product.name, \"-\", product.id), __jsx(\"div\", {\n    className: \"card-body\"\n  }, __jsx(\"h4\", {\n    className: \"card-title\"\n  }, product.name), __jsx(\"img\", {\n    src: product.image.sourceUrl,\n    alt: \"Product Image\",\n    width: \"200px\",\n    srcSet: product.image.srcSet\n  }), __jsx(\"p\", {\n    className: \"card-text\"\n  }, product.shortDescription)))) : \"\");\n});\n\nProduct.getInitialProps = async function (context) {\n  let {\n    query: {\n      slug\n    }\n  } = context;\n  const id = slug ? slug.split(\"-\").pop() : context.query.id;\n  console.log(id);\n  const PRODUCT_QUERY_OLD = gql`\n\t\tquery($id: ID) {\n\t\t\tproduct(id: $id) {\n\t\t\t\tname\n\t\t\t\tid\n\t\t\t\tshortDescription\n\t\t\t\timage {\n\t\t\t\t\tcaption\n\t\t\t\t\tsrcSet\n\t\t\t\t\tsourceUrl\n\t\t\t\t\ttitle\n\t\t\t\t\turi\n\t\t\t\t}\n\t\t\t\t... on SimpleProduct {\n\t\t\t\t\tprice\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n  const PRODUCT_QUERY = gql`\n\t\tquery($id: ID!) {\n\t\t\tproduct(id: $id) {\n\t\t\t\tname\n\t\t\t\tid\n\t\t\t\tshortDescription\n\t\t\t\timage {\n\t\t\t\t\tcaption\n\t\t\t\t\tsrcSet\n\t\t\t\t\tsourceUrl\n\t\t\t\t\ttitle\n\t\t\t\t\turi\n\t\t\t\t}\n\t\t\t\t... on SimpleProduct {\n\t\t\t\t\tprice\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n  const result = await client.query({\n    query: PRODUCT_QUERY,\n    variables: {\n      id: id\n    }\n  });\n  return {\n    product: result.data.product\n  };\n};\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}