{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/** @format */\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport client from \"../components/ApolloClient\";\nimport gql from \"graphql-tag\";\nconst Product = withRouter(props => {\n  console.warn(props);\n  const {\n    product\n  } = props;\n  return;\n\n  __jsx(Layout, null, product ? __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"card bg-light mb3 p-5\"\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, product.name))) : \"\");\n});\n\nProduct.getInitialProps = async function (context) {\n  let {\n    query: {\n      slug\n    }\n  } = context;\n  const id = slug ? slug.split(\"-\").pop() : context.query.id;\n  console.warn(id);\n  const PRODUCT_QUERY = gql`\n\t\tquery MonProduit($id: ID!) {\n\t\t\tproduct(id: $id) {\n\t\t\t\tname\n\t\t\t\tid\n\t\t\t}\n\t\t}\n\t`;\n  const result = await client.query({\n    query: PRODUCT_QUERY,\n    variables: {\n      id\n    }\n  });\n  return {\n    product: result.data.productBy\n  };\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/didierflury/Documents/Realiser/pweb/woo-next/pages/product.js"],"names":["Layout","Link","withRouter","client","gql","Product","props","console","warn","product","name","getInitialProps","context","query","slug","id","split","pop","PRODUCT_QUERY","result","variables","data","productBy"],"mappings":";;;AAAA;AAEA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,OAAO,GAAGH,UAAU,CAAEI,KAAD,IAAW;AACrCC,EAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAcH,KAApB;AAEA;;AACA,QAAC,MAAD,QACEG,OAAO,GACP,mBACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BA,OAAO,CAACC,IAAtC,CADD,CADD,CADO,GAOP,EARF;AAWA,CAjByB,CAA1B;;AAmBAL,OAAO,CAACM,eAAR,GAA0B,gBAAgBC,OAAhB,EAAyB;AAClD,MAAI;AACHC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADJ,MAEAF,OAFJ;AAIA,QAAMG,EAAE,GAAGD,IAAI,GAAGA,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAH,GAA2BL,OAAO,CAACC,KAAR,CAAcE,EAAxD;AAEAR,EAAAA,OAAO,CAACC,IAAR,CAAaO,EAAb;AAEA,QAAMG,aAAa,GAAGd,GAAI;;;;;;;EAA1B;AASA,QAAMe,MAAM,GAAG,MAAMhB,MAAM,CAACU,KAAP,CAAa;AACjCA,IAAAA,KAAK,EAAEK,aAD0B;AAEjCE,IAAAA,SAAS,EAAE;AAAEL,MAAAA;AAAF;AAFsB,GAAb,CAArB;AAKA,SAAO;AACNN,IAAAA,OAAO,EAAEU,MAAM,CAACE,IAAP,CAAYC;AADf,GAAP;AAGA,CA1BD;;AA4BA,eAAejB,OAAf","sourcesContent":["/** @format */\n\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport client from \"../components/ApolloClient\";\nimport gql from \"graphql-tag\";\n\nconst Product = withRouter((props) => {\n\tconsole.warn(props);\n\n\tconst { product } = props;\n\n\treturn;\n\t<Layout>\n\t\t{product ? (\n\t\t\t<div>\n\t\t\t\t<div className='card bg-light mb3 p-5'>\n\t\t\t\t\t<div className='card-header'>{product.name}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : (\n\t\t\t\"\"\n\t\t)}\n\t</Layout>;\n});\n\nProduct.getInitialProps = async function (context) {\n\tlet {\n\t\tquery: { slug },\n\t} = context;\n\n\tconst id = slug ? slug.split(\"-\").pop() : context.query.id;\n\n\tconsole.warn(id);\n\n\tconst PRODUCT_QUERY = gql`\n\t\tquery MonProduit($id: ID!) {\n\t\t\tproduct(id: $id) {\n\t\t\t\tname\n\t\t\t\tid\n\t\t\t}\n\t\t}\n\t`;\n\n\tconst result = await client.query({\n\t\tquery: PRODUCT_QUERY,\n\t\tvariables: { id },\n\t});\n\n\treturn {\n\t\tproduct: result.data.productBy,\n\t};\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}