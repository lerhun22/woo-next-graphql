{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/** @format */\nimport React, { useState, useEffect } from \"react\"; //see what are hooks ? for function component - not for a component - so we don't have to manage didmount etc fonction with that\n\nexport var AppContext = React.createContext([{}, function () {}]);\nexport var AppProvider = function AppProvider(props) {\n  _s();\n\n  var _useState = useState(),\n      cart = _useState[0],\n      setCart = _useState[1];\n\n  useEffect(function () {\n    //test if data is render into the clien side not the server side\n    if (true) {\n      var cartData = localStorage.getItem(\"woo-next-cart\");\n      cartData = null !== cartData ? JSON.parse(cartData) : \"\";\n      setCart(cartData);\n    }\n  }, []);\n  return __jsx(AppContext.Provider, {\n    value: [cart, setCart]\n  }, props.children);\n};\n\n_s(AppProvider, \"sTFfRcHMpCsns7ahfQAK6CpNeVU=\");\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/didierflury/Documents/Realiser/pweb/woo-next/components/context/AppContext.js"],"names":["React","useState","useEffect","AppContext","createContext","AppProvider","props","cart","setCart","cartData","localStorage","getItem","JSON","parse","children"],"mappings":";;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AAEA,OAAO,IAAMC,UAAU,GAAGH,KAAK,CAACI,aAAN,CAAoB,CAAC,EAAD,EAAK,YAAM,CAAE,CAAb,CAApB,CAAnB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACbL,QAAQ,EADK;AAAA,MAC9BM,IAD8B;AAAA,MACxBC,OADwB;;AAErCN,EAAAA,SAAS,CAAC,YAAM;AACf;AACA,cAAqB;AACpB,UAAIO,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAf;AACAF,MAAAA,QAAQ,GAAG,SAASA,QAAT,GAAoBG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAApB,GAA2C,EAAtD;AACAD,MAAAA,OAAO,CAACC,QAAD,CAAP;AACA;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SACC,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAACF,IAAD,EAAOC,OAAP;AAA5B,KACEF,KAAK,CAACQ,QADR,CADD;AAKA,CAhBM;;GAAMT,W;;KAAAA,W","sourcesContent":["/** @format */\n\nimport React, { useState, useEffect } from \"react\";\n\n//see what are hooks ? for function component - not for a component - so we don't have to manage didmount etc fonction with that\n\nexport const AppContext = React.createContext([{}, () => {}]);\n\nexport const AppProvider = (props) => {\n\tconst [cart, setCart] = useState();\n\tuseEffect(() => {\n\t\t//test if data is render into the clien side not the server side\n\t\tif (process.browser) {\n\t\t\tlet cartData = localStorage.getItem(\"woo-next-cart\");\n\t\t\tcartData = null !== cartData ? JSON.parse(cartData) : \"\";\n\t\t\tsetCart(cartData);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<AppContext.Provider value={[cart, setCart]}>\n\t\t\t{props.children}\n\t\t</AppContext.Provider>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}